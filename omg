--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.1.8) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local v14;v15=function(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==1) then v21=function(v31,v32,v33)if v33 then local v66=(v31/(2^(v32-((2 + 0) -1))))%(2^(((v33-(1 + 0)) -(v32-(1 + 0))) + 1 + 0));return v66-(v66%(1 + 0));else local v67=(3 -1)^(v32-(2 -1));return (((v31%(v67 + v67))>=v67) and ((191 + 904) -(1083 + 11))) or (0 -0);end end;v22=nil;v22=function()local v39=(1365 -(412 + 192)) -(362 + 399);local v40;while true do if (v39==(879 -(24 + 855))) then v40=v1(v16,v19,v19);v19=v19 + 1 + 0;v39=1 + 0 + 0;end if (v39==(1 + 0)) then return v40;end end end;v23=nil;v18=2;end if (v18==2) then v23=function()local v41=0 -0;local v42;local v43;while true do if ((0 -0)==v41) then v42,v43=v1(v16,v19,v19 + 2);v19=v19 + (1064 -(312 + 750));v41=2 -(1149 -(220 + 928));end if (v41==((2 -1) + 0)) then return (v43 * (575 -319)) + v42;end end end;v24=nil;v24=function()local v44,v45,v46,v47=v1(v16,v19,v19 + (8 -5));v19=v19 + 4 + 0;return (v47 * 16777216) + (v46 * 65536) + (v45 * (231 + 25)) + v44;end;v25=nil;v18=3;end if (v18==5) then v30=nil;v30=function(v34,v35,v36)local v48=v34[1];local v49=v34[2];local v50=v34[3];return function(...)local v68=1;local v69= -1;local v70={...};local v71=v11("#",...) -1;local v72;v73=function()local v77=v48;local v78=v49;local v79=v50;local v80=v28;local v81={};local v82={};local v83={};for v91=0 -0,v71 do if (((1791 + 734)>(2747 -(347 + 478))) and (v91>=v79)) then v81[v91-v79]=v70[v91 + 1];else v83[v91]=v70[v91 + 1 + 0];end end local v84=(v71-v79) + (182 -(49 + 132));local v85;local v86;while true do local v92=0 -0;while true do if ((((1430 + 1427) -1798)<(2403 + (4099 -(57 + 1559)))) and (v92==(0 -(0 + 0)))) then local v99=0 + 0;while true do if (((5290 -(976 + (1712 -(897 + 779))))<(1840 + 2694)) and (v99==(1024 -(675 + 348)))) then v92=3 -2;break;end if ((v99==(0 + 0)) or ((3673 -(149 + 1040))==(3559 + 175))) then v85=v77[v68];v86=v85[396 -((428 -223) + 190)];v99=1 + 0;end end end if ((v92==(482 -(72 + 409))) or ((501 + 117)<=218)) then if ((2629>(2698 -(260 + 477))) and (v86<=(42 -21))) then if ((v86<=(1871 -(223 + 1638))) or ((3105 -(356 + 154))<(10949 -8653))) then if ((v86<=(19 -15)) or (3245<=(163 -121))) then if ((v86<=1) or ((5392 -(276 + 690))<=(12781 -9325))) then if ((1265<=(418 + 1571)) and (v86>(0 + 0))) then v68=v85[3];else local v108=1206 -(348 + 858);local v109;local v110;local v111;while true do if (((991 + 196 + 241)<=(1545 + 565)) and (v108==(101 -((83 -55) + 73)))) then v109=1436 -(4 + 1432);v110=nil;v108=1 + 0 + 0;end if ((v108==(1 + 0)) or (1219>1766)) then v111=nil;while true do if (((3204 -(136 + 246))>(377 -237)) and (v109==(1 + 0))) then while true do if (((3249 -1962)>=(1794 -(577 + 791))) and (v110==0)) then v111=v85[4 -2];do return v12(v83,v111,v69);end break;end end break;end if (((177 + 3162)<=(5961 -(1548 + 152))) and (v109==(0 + 0))) then local v237=1969 -(1485 + 484);while true do if ((v237==(0 + 0)) or (((3631 -(269 + 227)) + (1119 -445))<=(6078 -3322))) then v110=0 + 0;v111=nil;v237=444 -((500 -(27 + 305)) + 275);end if ((v237==((773 -(148 + 622)) -2)) or ((3920 -(1123 + 191))>=2962)) then v109=1 -0;break;end end end end break;end end end elseif ((v86<=(1500 -(362 + 456 + 680))) or ((3327 + 682)==(3932 -(945 + 862)))) then local v112=0 -(0 -0);local v113;local v114;while true do if ((558<(5971 -2819)) and (v112==(3 -2))) then while true do if ((v113==0) or (((1284 + 393) -(1147 + 110))<=(299 -179))) then v114=v85[4 -(1730 -(794 + 934))];v69=(v114 + v84) -(1121 -(357 + (1265 -(185 + 317))));v113=1 + 0;end if (((1187 + 3380)<=(6523 -(139 + 1565))) and (v113==((4 -3) + 0))) then for v259=v114,v69 do local v260=(259 -(126 + 133)) -0;local v261;local v262;while true do if ((v260==(2 -1)) or ((6150 -3769)>4527)) then while true do if (((1815 + (2961 -1357))==((2633 + 1305) -(109 + 410))) and (v261==(0 -0))) then v262=v81[v259-v114];v83[v259]=v262;break;end end break;end if ((((346 -(32 + 56)) + 3573)==3831) and (0==v260)) then v261=11 -(5 + 6);v262=nil;v260=1;end end end break;end end break;end if ((v112==0) or ((3708 -(265 + 919))<=(196 + 2149))) then v113=(1094 -(522 + 572)) -0;v114=nil;v112=1429 -(1391 + 37);end end elseif (((7485 -3072)>=(12371 -8778)) and (v86>((3 + 1) -(1 + 0)))) then local v162=0 + 0;local v163;local v164;while true do if ((v162==((1 -0) -0)) or (2319>=3824)) then while true do if (((0 -0)==v163) or ((11681 -7794)==3496)) then v164=v85[5 -3];v83[v164]=v83[v164](v83[v164 + 1]);break;end end break;end if ((3942>(2831 -(1112 + 318))) and (v162==((0 + 0) -0))) then v163=0;v164=nil;v162=605 -(595 + 9);end end else v83[v85[1126 -(211 + 913)]]=v83[v85[3 + 0]][v85[19 -(14 + 1)]];end elseif ((3545==(8608 -5063)) and (v86<=7)) then if ((v86<=(1908 -(1094 + 809))) or ((8024 -4916)==(3881 + 413))) then if (((5783 -(1092 + 418 + 383))==(5509 -(554 + 1065))) and  not v83[v85[6 -4]]) then v68=v68 + (4 -3);else v68=v85[1376 -(1127 + 246)];end elseif (((14321 -11262)<(5489 -1555)) and (v86>(1 + 5))) then if ((v83[v85[2]]~=v83[v85[1430 -(339 + 1087)]]) or ((4106 -(610 + 229))<=(231 + 524))) then v68=v68 + (1031 -(498 + 532));else v68=v85[1025 -(453 + 569)];end elseif ((4157>=1039) and (v83[v85[1073 -(840 + 231)]]==v85[1 + 3])) then v68=v68 + (2 -1);else v68=v85[3 + 0];end elseif (((3606 + 47)==3653) and (v86<=(1825 -(1656 + 161)))) then local v115=0 + 0;local v116;local v117;while true do if (((8095 -6413)<=(5128 -(1356 + 901))) and ((1 + 0)==v115)) then while true do if ((v116==0) or (4181<(1028 -662))) then v117=v85[1057 -(298 + 757)];v83[v117](v83[v117 + 1 + 0]);break;end end break;end if ((v115==(261 -(165 + 96))) or (2682==4593)) then v116=873 -(578 + 295);v117=nil;v115=2 -1;end end elseif ((((25 + 3) -18)<=(4775 -(852 + 582))) and (v86>(732 -(371 + 352)))) then local v168=(912 -(731 + 181)) -0;local v169;local v170;local v171;while true do if ((v168==0) or ((3939 -(15 + 751 + 35))<(579 + 351))) then v169=0 + 0;v170=nil;v168=1 + 0;end if (((3283 -(292 + 30))>=(1132 -344)) and (v168==(1893 -((2144 -(666 + 80)) + 494)))) then v171=nil;while true do if ((v169==(1 + 0)) or (((3823 -(840 + 1143)) -(660 + 902))>(11437 -8042))) then for v304=v170 + 1,v69 do v7(v171,v83[v304]);end break;end if (((801 -(24 + 149))<=(3568 -729)) and (v169==(0 -0))) then local v291=0 -0;while true do if ((v291==(2 -1)) or ((1004 -276)>=(2500 + 652))) then v169=1 + 0;break;end if (((4102 -(51 + 480 + 25))>=(2465 + 904)) and (v291==(0 + (1656 -(1389 + 267))))) then v170=v85[7 -5];v171=v83[v170];v291=1;end end end end break;end end else local v172=1952 -((4662 -3007) + 297);local v173;local v174;local v175;while true do if ((v172==(1 + 0)) or ((3566 -2438)<=(196 -136))) then v175={};v174=v9({},{__index=function(v240,v241)local v263=1045 -(319 + 726);local v264;local v265;while true do if ((v263==1) or ((2022 + 2371)==(577 + (1968 -611)))) then while true do if ((v264==((1666 -(1135 + 531)) -0)) or (2241<2171)) then v265=v175[v241];return v265[1 -(0 -0)][v265[(1401 -(927 + 472)) + (1789 -(497 + 1292))]];end end break;end if (((0 + 0)==v263) or (((1823 -645) -(453 + 291))<=(546 -293))) then v264=164 -((585 -(270 + 165)) + 14);v265=nil;v263=1877 -(694 + 1182);end end end,__newindex=function(v242,v243,v244)local v266=0 -0;local v267;local v268;while true do if ((v266==((2426 -(810 + 635)) -(383 + 597))) or ((1233 -(1514 -1155))>(139 + 4556 + 210))) then while true do if (((2065 + 898)<=(7801 -4182)) and (v267==0)) then v268=v175[v243];v268[947 -(119 + 827)][v268[2]]=v244;break;end end break;end if ((v266==(397 -((1421 -(440 + 755)) + 171))) or ((4268 -(443 + 25))>(6393 -(1386 + 102)))) then v267=0 + 0;v268=nil;v266=1 -0;end end end});v172=1345 -(677 + 176 + 490);end if (((7524 -3440)>=(4365 -1541)) and (v172==(0 -0))) then v173=v78[v85[3]];v174=nil;v172=1978 -(435 + 1542);end if ((v172==((2 + 2) -2)) or ((1229 -(420 + 77))>=(11815 -8630))) then for v245=1,v85[4 + 0] do local v246=0 + 0;local v247;while true do if ((2127<(1216 + 1969)) and ((785 -(442 + 343))==v246)) then local v305=1995 -((4102 -2853) + 746);while true do if (((0 + 0)==v305) or (3895==(219 + 1650))) then v68=v68 + 1 + 0;v247=v77[v68];v305=1 + 0;end if ((v305==(1 + 0)) or ((479 + 253)<=(1135 -613))) then v246=1 + 0;break;end end end if ((v246==1) or (2623==(3618 -(1088 + (1748 -(1028 + 498)))))) then if (((1429 -411)<=(4707 -(1436 + 92))) and (v247[(1905 -(692 + 1212)) + 0]==(997 -(255 + 708)))) then v175[v245-(4 -3)]={v83,v247[8 -5]};else v175[v245-1]={v35,v247[3]};end v82[ #v82 + (2 -1)]=v175;break;end end end v83[v85[1378 -(314 + 1062)]]=v30(v173,v174,v36);break;end end end elseif (((2845 -(397 + 480))<(1764 + (4167 -(609 + 966)))) and (v86<=(11 + 4))) then if (((4449 -(33 + 1037))==(4407 -(155 + 873))) and (v86<=12)) then if (((2779 + 496)==3275) and (v86==(238 -(212 + (23 -8))))) then local v118=0 + 0;local v119;local v120;local v121;local v122;local v123;local v124;while true do if ((v118==(1 + 2)) or ((4168 + 656)<=(10034 -5722))) then while true do if ((4972==((29860 -21471) -3417)) and (v119==(2 -1))) then local v248=0 -0;local v249;while true do if ((v248==((0 -0) + 0)) or ((1333 + 3040)<=(2228 + 425))) then v249=0 + 0;while true do if ((v249==(472 -(136 + 336))) or ((345 + 92)==(12977 -9704))) then local v325=0 + 0;while true do if ((462<=2021) and (v325==1)) then v249=1608 -(1402 + 205);break;end if ((v325==(0 -0)) or ((48 + 230)>(3664 + 242))) then v122=v120 + (4 -2);v123={v83[v120](v83[v120 + (1331 -(463 + 867)) + 0],v83[v122])};v325=(307 -(23 + 283)) + 0;end end end if (((1577 + 2396)==3973) and (v249==(2 -1))) then v119=2;break;end end break;end end end if (((1557 -(566 + 442))==(2009 -(42 + 1418))) and ((6 -3)==v119)) then if (((942 + 462)<=1938) and v124) then local v292=0 + 0;while true do if ((v292==(0 -0)) or ((3019 -676)<=(1373 + 455))) then v83[v122]=v124;v68=v85[(2856 -(1607 + 34)) -(102 + 1110)];break;end end else v68=v68 + 1;end break;end if (((3188 -877)>=(39 + 14)) and ((0 + 0)==v119)) then local v250=0;while true do if ((2475<(8969 -4170)) and ((0 + 0)==v250)) then local v307=0 -0;while true do if ((v307==(0 + 0)) or ((2211 + 2577)==(1896 + 43))) then v120=v85[2 -0];v121=v85[13 -9];v307=1;end if (((1 + 0)==v307) or (327>=4151)) then v250=1;break;end end end if (((2956 -(1509 + 404))>(1378 -(800 + 117))) and (v250==(1 + 0 + 0))) then v119=1572 -(19 + 1189 + 363);break;end end end if (((2607 + 1543)>306) and (v119==(2 -0))) then local v251=0;while true do if ((v251==(886 -(720 + 165))) or (783>2253)) then v119=(9 + 0) -6;break;end if ((1085>=(1184 -277)) and (v251==0)) then local v308=0 + 0;while true do if ((v308==(0 + 0)) or ((66 + 181)>2375)) then for v335=1 -(223 -(116 + 107)),v121 do v83[v122 + v335]=v123[v335];end v124=v123[1];v308=1 + 0;end if (((224 + 1170)<=3871) and (v308==(1589 -(291 + 1297)))) then v251=1 + 0;break;end end end end end end break;end if ((v118==0) or (837<=736)) then v119=0 + (0 -0);v120=nil;v118=1 + 0;end if ((4056>(2621 + 645)) and (v118==1)) then local v209=759 -(145 + 614);while true do if ((v209==(1 -0)) or ((8137 -(4873 + 907))>=(6231 -2512))) then v118=2;break;end if ((v209==0) or (((1984 + 3363) -((1230 -814) + 6))<(1833 + 699))) then v121=nil;v122=nil;v209=1 + 0;end end end if ((v118==((361 + 357) -(688 + (50 -22)))) or ((12528 -9026)<3015)) then local v210=0;while true do if ((v210==(0 + 0)) or (1358>1401)) then v123=nil;v124=nil;v210=3 -2;end if ((v210==1) or ((14665 -11267)<=(2753 + 585))) then v118=752 -(309 + 440);break;end end end end else local v125=0 -0;local v126;local v127;local v128;local v129;local v130;while true do if ((v125==(1628 -(43 + 666 + 918))) or (1404>=(5494 -2471))) then v128=nil;v129=nil;v125=4 -2;end if ((v125==0) or ((997 + (4332 -2617))<=(87 + 397))) then v126=0;v127=nil;v125=(1484 -(531 + 952)) + 0;end if ((v125==2) or ((5349 -(1276 + 689))==(4741 -(551 + 243)))) then v130=nil;while true do if ((((0 -0) + (0 -0))==v126) or ((3428 -(1033 + 112))==(2245 -(12 + 364)))) then local v252=(2130 -(759 + 450)) -(552 + 369);while true do if ((v252==(1998 -(197 + 1801))) or ((1021 + (5018 -2229))>(7998 -3109))) then v127=v85[2 + 0];v128,v129=v80(v83[v127](v83[v127 + ((759 -322) -(101 + 255 + 80))]));v252=1 -0;end if ((v252==1) or (407==2413)) then v126=308 -(131 + 176);break;end end end if ((v126==(2 -1)) or ((2657 -(987 + 399))>(1823 + 1033))) then local v253=0;while true do if ((v253==(0 + 0 + 0)) or (2735>(7002 -2183))) then v69=(v129 + v127) -(3 -(1485 -(383 + 1100)));v130=0;v253=84 -(18 + 47 + 18);end if (((910 -(648 -309))<(1637 + 894)) and (v253==(2 -1))) then v126=2 + 0;break;end end end if (((424 + 1301)==(754 + (1196 -225))) and (v126==(3 -1))) then for v269=v127,v69 do local v270=100 -(73 + 27);while true do if (((3789 -(63 + 794))>=(184 + 1148)) and (v270==(0 -0))) then v130=v130 + 1 + 0;v83[v269]=v128[v130];break;end end end break;end end break;end end end elseif ((v86<=((2027 -(1404 + 589)) -21)) or (3627<=3440)) then if ((((18580 -11203) -5139)<=((12896 -(97 + 1284)) -7567)) and (v83[v85[2 -0]]<v83[v85[1 + 3]])) then v68=v68 + 1 + (673 -(581 + 92));else v68=v85[2 + 1];end elseif ((v86>(4 + 10)) or ((3819 -((2228 -(966 + 59)) + 580))<=(42 + 1297))) then local v177=0;local v178;local v179;while true do if ((v177==(1 + 0)) or ((5843 -(745 + 724))<1973)) then while true do if ((v178==0) or (4649==(4435 -(398 + (319 -117))))) then v179=v85[1 + 1];do return v83[v179](v12(v83,v179 + ((229 + 95) -(31 + 171 + 121)),v69));end break;end end break;end if ((v177==0) or ((11978 -8758)<=2229)) then v178=0;v179=nil;v177=3 -(4 -2);end end else for v211=v85[1 + 1],v85[3 -0] do v83[v211]=nil;end end elseif (((3872 -(537 + 699))==(2207 + 429)) and (v86<=18)) then if ((v86<=16) or ((8345 -3819)<(11728 -8919))) then local v131=0;local v132;local v133;local v134;while true do if ((v131==0) or ((6599 -3802)>(2044 + 1224))) then v132=v85[(2 + 2) -2];v133={v83[v132](v83[v132 + (1 -0)])};v131=931 -(112 + 805 + 13);end if ((v131==(1 -0)) or ((422 + 233)==(2868 + 402))) then v134=0 + 0;for v221=v132,v85[4] do local v222=204 -(172 + 32);local v223;while true do if ((((1715 -848) + 1319)==(3138 -(561 + 391))) and (v222==(952 -(700 + 252)))) then v223=1582 -(11 + 1571);while true do if (((3277 -(327 + 1180))<(6288 -3047)) and (v223==0)) then v134=v134 + 1;v83[v221]=v133[v134];break;end end break;end end end break;end end elseif (((3932 -2856)<(12137 -(14099 -6354))) and (v86==17)) then do return v83[v85[1716 -(948 + 766)]];end else local v180=0 -0;local v181;local v182;local v183;while true do if (((4864 -1931)<=(8434 -4875)) and (v180==(0 + 0))) then v181=0 + 0;v182=nil;v180=1;end if ((v180==(1 + 0)) or ((579 + 4324)<=(4781 -1511))) then v183=nil;while true do if ((v181==(0 + 0)) or (1565>4614)) then v182=0 + 0;v183=nil;v181=3 -2;end if ((695>=(2039 -(1525 + 29))) and ((1 + 0)==v181)) then while true do if ((2323<(481 + 2032)) and ((839 -(306 + 533))==v182)) then v183=v85[2];v83[v183]=v83[v183](v12(v83,v183 + 1,v85[1254 -(113 + 1138)]));break;end end break;end end break;end end end elseif ((v86<=(207 -(134 + 54))) or ((5848 -(610 + 7 + 267))<(1988 + 86))) then v83[v85[2]][v85[1157 -(1010 + 144)]]=v85[4];elseif ((v86>(5 + 3 + 3 + 9)) or (365>(2448 -(918 + 174)))) then v36[v85[3]]=v83[v85[(407 + 41) -(423 + 23)]];else v83[v85[1228 -(815 + 411)]]={};end elseif ((v86<=32) or (757<=(1218 -(466 + 400)))) then if (((515 + 2787)<=3837) and (v86<=(44 -(1582 -(361 + 1203))))) then if ((v86<=(3 + 17 + 3)) or ((2119 + 2138)<=(241 + 124))) then if ((v86>(14 + 8)) or ((4682 -(90 + 1001))>=(3362 + 376))) then local v137=0 + 0;local v138;local v139;local v140;while true do if (((264 + 1069)==(3267 -(1027 + 907))) and (v137==(0 -0))) then local v214=705 -(141 + 564);while true do if ((v214==(1 -0)) or ((8949 -5944)<(1931 -1172))) then v137=3 -2;break;end if (((13620 -9235)>(4672 -(594 + 710))) and (v214==(0 + 0))) then v138=0 -0;v139=nil;v214=1;end end end if ((v137==(3 -2)) or ((3551 -(60 + 1910))==2185)) then v140=nil;while true do if (((3100 + (1856 -1008))<=(5999 -(948 + 508))) and (1==v138)) then for v271=1216 -(286 + 929), #v82 do local v272=1259 -(1209 + 50);local v273;local v274;while true do if ((v272==(1152 -((2029 -(1114 + 77)) + (390 -76)))) or ((825 + 1073)==(4424 -2517))) then v273=0 -0;v274=nil;v272=1 + 0;end if (((226 + 2487)>345) and (v272==(1 -0))) then while true do if ((v273==0) or (1468>=(4445 -(344 + 270)))) then v274=v82[v271];for v343=0 -0, #v274 do local v344=0 -0;local v345;local v346;local v347;local v348;while true do if ((1552<=((9412 -(189 + 1676)) -3086)) and (v344==(1 + 0))) then v347=nil;v348=nil;v344=718 -(336 + 380);end if ((v344==(0 -0)) or ((1392 + 829)==(36 + 57 + 23))) then v345=1691 -(1529 + 162);v346=nil;v344=1 -0;end if ((v344==(2 -0)) or ((2353 -(107 + 77))==((683 -(50 + 594)) + 4))) then while true do if ((v345==(1 + 0)) or (((2217 -1584) + 1379)==(1195 -(545 + 527)))) then v348=v346[2 + 0];if (((v347==v83) and (v348>=v139)) or ((2906 -(40 + 102))>=((5289 + 3928) -5995))) then local v362=0 -0;while true do if ((2549<(10356 -6361)) and (v362==(0 -0))) then v140[v348]=v347[v348];v346[544 -(31 + 512)]=v140;break;end end end break;end if ((((1257 -(93 + 174)) + 397)>92) and (v345==0)) then local v357=0;while true do if ((v357==(60 -(28 + 32))) or ((137 + 797)>(3680 -2524))) then v346=v274[v343];v347=v346[521 -(436 + 84)];v357=(2 -1) + 0;end if ((v357==(1 -0)) or ((3598 + 1358)<=(15384 -10730))) then v345=1 + 0;break;end end end end break;end end end break;end end break;end end end break;end if ((4506>(3174 -(235 + 489))) and ((0 + 0)==v138)) then local v254=0 -0;local v255;while true do if (((0 + 0)==v254) or ((276 + 3485)<(1614 + (2932 -2070)))) then v255=0 + 0;while true do if (((3249 -(6888 -4899))<=(261 + 488 + 4128)) and (v255==(0 + 0))) then local v329=693 -(540 + 11 + 142);while true do if ((v329==(0 + 0)) or ((2201 -(792 + 358))==4671)) then v139=v85[1 + 1];v140={};v329=81 -(9 + 0 + 71);end if ((v329==(147 -(100 + 46))) or ((221 -74)>=(2250 -(173 + 336 + 581)))) then v255=1;break;end end end if (((374 -(251 + 122))==v255) or ((14225 -10408)<=(1871 -(372 + 1436)))) then v138=1;break;end end break;end end end end break;end end else local v141=0 + 0;local v142;local v143;local v144;local v145;while true do if ((v141==(2 -1)) or ((2466 -(137 + 113))>=(1213 + 2707))) then v144=nil;v145=nil;v141=433 -((893 -(336 + 185)) + 24 + 35);end if (((90 + 2109)<=(14189 -10839)) and (v141==0)) then v142=379 -(115 + 1 + 263);v143=nil;v141=215 -(136 + 78);end if (((5997 -(728 + (1988 -880)))>=590) and ((1264 -(680 + 582))==v141)) then while true do if ((1683<(4675 -((431 -197) + 1590))) and (v142==(0 -0))) then v143=v85[3 -1];v144={v83[v143](v12(v83,v143 + 1,v69))};v142=4 -3;end if ((v142==(1040 -(21 + 87 + 931))) or ((1598 -701)>(729 + 1902))) then v145=0 -0;for v275=v143,v85[4] do local v276=0;local v277;local v278;while true do if ((4608>(6 + 869 + 1202)) and (v276==((1 -0) + 0))) then while true do if ((v277==(1600 -((2023 -(1157 + 84)) + 818))) or ((2107 + 1737)==(494 + 1846))) then v278=0;while true do if (((6616 -(6749 -2562))<(4967 -((2271 -(1132 + 110)) + 373))) and (v278==(427 -(338 + 89)))) then v145=v145 + 1 + 0;v83[v275]=v144[v145];break;end end break;end end break;end if ((v276==0) or ((7969 -3719)<(3491 -(643 + 1232)))) then v277=0 -0;v278=nil;v276=1;end end end break;end end break;end end end elseif ((v86<=(79 -55)) or ((9291 -5752)>=((769 -430) + 4382))) then if (((6303 -3181)<=4447) and (v83[v85[8 -6]]~=v85[643 -(461 + 178)])) then v68=v68 + 1;else v68=v85[1607 -(940 + 664)];end elseif ((v86>(40 -15)) or ((2308 -1423)>=(2207 + 647))) then v83[v85[1744 -(871 + 871)]]=v85[1847 -(1589 + 255)];else v83[v85[2 + 0]]=v30(v78[v85[3]],nil,v36);end elseif ((v86<=(1639 -(550 + (2274 -(1112 + 102))))) or ((74 + 774)>4305)) then if ((3487>(2981 -1373)) and (v86<=((40 + 36) -49))) then local v146=0 + 0;local v147;local v148;local v149;local v150;while true do if (((2 + 0)==v146) or ((299 + 71)>=3582)) then for v224=v147,v69 do local v225=0;local v226;local v227;while true do if (((2353 -((1583 -(188 + 852)) + 1216))<=(12855 -8951)) and (v225==(4 -3))) then while true do if ((v226==(0 -0)) or ((5359 -2666)>=(693 + (3944 -(444 + 152))))) then v227=0 -0;while true do if (((4355 -(869 + 1092))<2737) and (v227==(0 -(1686 -(1120 + 566))))) then v150=v150 + 1 + 0;v83[v224]=v148[v150];break;end end break;end end break;end if ((4108<(5545 -(453 + 941))) and (v225==(950 -(149 + 801)))) then v226=0;v227=nil;v225=1610 -(982 + 627);end end end break;end if (((2791 + 1379)==4170) and (v146==(2 -1))) then local v215=1064 -((1863 -(285 + 721)) + 207);while true do if ((v215==(1297 -(1043 + 254))) or ((5113 -(31 + 84))<190)) then v69=(v149 + v147) -(246 -(128 + 117));v150=50 -(18 + 32);v215=1797 -(1578 + 218);end if (((49 + (4744 -(356 + 909)))>(309 + 558)) and (v215==(346 -(343 + 2)))) then v146=1109 -((2086 -(1914 + 82)) + 1017);break;end end end if ((0==v146) or ((3630 -2108)>=((9556 -3346) -4522))) then local v216=1594 -(723 + 871);while true do if ((v216==(1 + 0 + 0)) or ((6470 -3094)>(7574 -2658))) then v146=1;break;end if ((v216==(0 + 0)) or ((12753 -10093)<(2995 -1826))) then v147=v85[241 -((723 -523) + 39)];v148,v149=v80(v83[v147](v12(v83,v147 + (1 -0),v85[4 -1])));v216=1;end end end end elseif ((v86==28) or ((8253 -5462)<(4268 -(201 + 1046 + 560)))) then local v191=1072 -(315 + 757);local v192;local v193;while true do if ((4790>=(12766 -9579)) and (v191==(1 -0))) then while true do if ((v192==(0 -0)) or ((1322 -(267 + 88))<=(1282 -(2722 -(1348 + 651))))) then v193=v85[2];v83[v193]=v83[v193]();break;end end break;end if (((2048 + 251)<4691) and (v191==0)) then v192=0;v193=nil;v191=676 -((784 -(138 + 235)) + 264);end end elseif (((962 + 186)==(3332 -2184)) and (v85[2 + 0]==v83[v85[4]])) then v68=v68 + 1 + 0;else v68=v85[3 + 0];end elseif ((4247>=((3105 -(11 + 1143)) -(118 + 1423))) and (v86<=30)) then v83[v85[1030 -(186 + 842)]][v85[3 + 0]]=v83[v85[3 + 0 + 1]];elseif ((3020>=923) and (v86>31)) then local v194=0 + 0;local v195;local v196;local v197;while true do if ((v194==(1 + 0)) or ((773 -(24 + 304))<=(2098 -(1552 + 226)))) then v197=nil;while true do if (((1 + 0)==v195) or (4814<=4504)) then v83[v196 + (1 -0)]=v197;v83[v196]=v197[v85[4]];break;end if ((v195==(0 -0)) or ((5064 -1804)<=(3276 -(134 + 176)))) then v196=v85[490 -(77 + 411)];v197=v83[v85[1 + 2]];v195=1 -0;end end break;end if ((v194==(0 -0)) or (1782>(3034 -(295 + 154)))) then v195=1607 -(730 + 877);v196=nil;v194=1794 -(1238 + 555);end end elseif (v83[v85[1 + 1]] or ((1949 -(49 + 145))>=(6719 -(1189 + 1009)))) then v68=v68 + (39 -((41 -22) + 19));else v68=v85[11 -8];end elseif (((2934 -(40 + (142 -93)))<2863) and (v86<=(15 + 22))) then if ((1100<(4583 -(101 + 1267))) and (v86<=(3 + 13 + 18))) then if ((((6614 -(416 + 850)) -(768 + 563))>3473) and (v86==(9 + 24))) then v83[v85[6 -4]]=v83[v85[3]] -v83[v85[330 -((274 -(159 + 72)) + 283)]];else v83[v85[2 + 0]]=v83[v85[3]];end elseif (((830 -(223 + 15))<=(1129 + 292 + 209 + 228)) and (v86<=(239 -(65 + 139)))) then v83[v85[6 -4]]=v36[v85[1001 -(15 + 22 + 961)]];elseif ((v86==(26 + 10)) or (((1383 -(820 + 59)) -105)>(6415 -(1026 + 600)))) then local v198=0;local v199;while true do if (((8565 -3598)==(15415 -10448)) and (v198==(0 + 0))) then v199=v85[4 -2];v83[v199](v12(v83,v199 + (1619 -(760 + 858)),v85[7 -4]));break;end end else local v200=0 -0;local v201;local v202;while true do if (((2469 + 354)>=(1882 -((1830 -(740 + 1079)) + 264))) and ((1 + 0)==v200)) then while true do if (((14807 -(20331 -9259))==(4790 -(625 + 430))) and (v201==(0 -0))) then v202=v85[2];v83[v202]=v83[v202](v12(v83,v202 + (447 -(265 + 181)),v69));break;end end break;end if ((v200==(199 -(20 + 48 + 131))) or ((4961 -(1153 + 612))<(438 -((1940 -(699 + 1202)) + 249)))) then v201=0;v202=nil;v200=2 -1;end end end elseif ((1149>(1849 -((3682 -2417) + 191))) and (v86<=((1333 -(462 + 835)) + 3 + 1))) then if ((v86<=(271 -((844 -(675 + 162)) + (1407 -(1157 + 24))))) or ((274 + 24)>(204 + 776))) then local v158=1383 -(149 + 1234);local v159;while true do if ((172<1440) and (v158==(0 + 0))) then v159=v85[6 -4];do return v12(v83,v159,v159 + v85[9 -6]);end break;end end elseif (((1614 -(606 + 687))<(9552 -6812)) and (v86==(8 + 31))) then v83[v85[2 -0]]=v83[v85[6 -3]][v83[v85[4]]];else v83[v85[5 -3]]=v83[v85[1133 -(936 + 194)]] * v83[v85[1 + 3]];end elseif ((v86<=(1890 -(15 + 35 + 1799))) or ((146 + 280)>(6386 -4007))) then do return;end elseif ((v86==42) or ((1617 -(368 + 246))>=(11928 -8119))) then v83[v85[2]]=v35[v85[3]];else v83[v85[752 -(601 + 149)]]=v85[1834 -((238 -(35 + 22)) + 1650)]~=(0 -0);end v68=v68 + 1;break;end end end end;A,B=v28(v10(v73));if  not A[1] then local v87=0;local v88;while true do if (v87==0) then v88=v34[4][v68] or "?";error("Script error at ["   .. v88   .. "]:"   .. A[2]);break;end end else return v12(A,2,B);end end;end;return v30(v29(),{},v17)(...);end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v37)if (v1(v37,2)==79) then local v74=0;while true do if (v74==0) then v20=v0(v3(v37,1,1));return "";end end else local v75=0;local v76;while true do if (0==v75) then v76=v2(v0(v37,16));if v20 then local v97=v5(v76,v20);v20=nil;return v97;else return v76;end break;end end end end);v21=nil;v18=1;end if (v18==3) then v25=function()local v51=(1454 + 472) -(501 + 1425);local v52;local v53;while true do if (v51==0) then v52=v24();v53=v24();v51=1994 -(541 + 1452);end if (1==v51) then return (( -(1563 -(896 + 665)) * v21(v53,563 -(35 + 496))) + 1 + 0) * ((746 -(169 + 575))^(v21(v53,10 + 5 + 6,844 -(312 + 501)) -(2315 -(166 + 1126)))) * ((((v21(v53,2 -1,1966 -((329 -133) + 1750)) * (2^(1070 -(617 + 421)))) + v52)/(2^(12 + 40))) + (1064 -((38 -17) + 1042)));end end end;v26=nil;v26=function(v38)local v54=0 + 0;local v55;local v56;while true do if (v54==0) then v55=nil;if  not v38 then v38=v24();if (v38==(1176 -(692 + 484))) then return "";end end v54=1124 -(493 + 630);end if (v54==(6 -3)) then return v6(v56);end if (v54==(6 -4)) then v56={};for v89=(847 -(43 + 803)) + 0, #v55 do v56[v89]=v2(v1(v3(v55,v89,v89)));end v54=1398 -(202 + 2 + 1191);end if (v54==1) then v55=v3(v16,v19,(v19 + v38) -(1671 -(1083 + 587)));v19=v19 + v38;v54=(1 + 6) -5;end end end;v27=v24;v18=4;end if (v18==4) then v28=nil;v28=function(...)return {...},v11("#",...);end;v29=nil;v29=function()local v57=1045 -(193 + 852);local v58;local v59;local v60;local v61;local v62;local v63;local v64;local v65;while true do if (v57~=(0 -0)) then else v58=0;v59=nil;v57=2 -1;end if (v57==(4 + 0)) then while true do if (v58~=(862 -(444 + 416))) then else v63=nil;v64=nil;v58=1432 -(171 + 1258);end if (v58==(1 + 2)) then v65=nil;while true do local v98=0 + 0;while true do if (v98~=(781 -(51 + 730))) then else local v100=558 -(357 + 201);while true do if (0==v100) then if (0==v59) then v60={};v61={};v62={};v63={v60,v61,nil,v62};v59=1 + 0;end if ((7 -5)==v59) then local v105=978 -(157 + 821);local v106;while true do if ((593 -(312 + 281))==v105) then v106=0 + 0;while true do local v161=0 -0;while true do if (v161==(0 + 0)) then if (v106==(0 -0)) then for v279=1 -0,v24() do local v280=653 -(200 + 453);local v281;local v282;local v283;while true do if (v280==(0 + 0)) then v281=0 -0;v282=nil;v280=1 + 0;end if (1~=v280) then else v283=nil;while true do if (v281==(1710 -(561 + 1148))) then while true do if (v282~=0) then else v283=v22();if (v21(v283,1,1 + 0)~=(0 + 0)) then else local v352=164 -(162 + 2);local v353;local v354;local v355;while true do if (v352==3) then if (v21(v354,3 -0,3)==(246 -(179 + 66))) then v355[4]=v65[v355[4]];end v60[v279]=v355;break;end if (v352==(942 -(656 + 285))) then local v359=381 -(162 + 219);while true do if (v359==(0 -0)) then v355={v23(),v23(),nil,nil};if (v353==(0 -0)) then local v374=0 -0;local v375;local v376;local v377;while true do if ((1524 -(902 + 622))==v374) then v375=0 -0;v376=nil;v374=3 -2;end if (v374==(1 + 0)) then v377=nil;while true do if (v375==(0 -0)) then v376=0;v377=nil;v375=1 + 0;end if (v375==(1 -0)) then while true do if (v376~=0) then else v377=0 -0;while true do if (v377==(0 + 0)) then v355[1420 -(302 + 1115)]=v23();v355[4 + 0]=v23();break;end end break;end end break;end end break;end end elseif (v353==(2 -1)) then v355[3]=v24();elseif (v353==(2 -0)) then v355[3]=v24() -((1893 -(550 + 1341))^(1501 -(696 + 789)));elseif (v353==(2 + 1)) then local v380=0 -0;local v381;local v382;while true do if ((2 -1)==v380) then while true do if (v381~=(0 + 0)) then else v382=0 + 0;while true do if (v382==(1413 -(733 + 680))) then v355[3]=v24() -(2^(3 + 13));v355[426 -(116 + 306)]=v23();break;end end break;end end break;end if (v380==(0 + 0)) then v381=0 + 0;v382=nil;v380=1;end end end v359=1 + 0;end if (v359==(629 -(231 + 397))) then v352=2 + 0;break;end end end if (v352~=(0 -0)) then else local v360=1487 -(1248 + 239);local v361;while true do if (v360~=(0 + 0)) then else v361=360 -(103 + 257);while true do if (v361==0) then v353=v21(v283,2,3);v354=v21(v283,10 -6,1107 -(748 + 353));v361=983 -(476 + 506);end if (1~=v361) then else v352=1;break;end end break;end end end if ((2 -0)~=v352) then else if (v21(v354,1550 -(590 + 959),1)==1) then v355[1 + 1]=v65[v355[5 -3]];end if (v21(v354,3 -1,3 -1)==(1 -0)) then v355[1483 -(204 + 1276)]=v65[v355[1 + 2]];end v352=3 -0;end end end break;end end break;end if (v281~=0) then else local v341=480 -(13 + 467);while true do if (v341==(3 -2)) then v281=1 -0;break;end if (v341==0) then v282=0 -0;v283=nil;v341=4 -3;end end end end break;end end end for v284=3 -2,v24() do v61[v284-(1849 -(220 + 1628))]=v29();end v106=1 + 0;end if (v106~=(529 -(335 + 193))) then else local v258=0;while true do if (v258==(1815 -(171 + 1644))) then for v314=1,v24() do v62[v314]=v24();end return v63;end end end break;end end end break;end end end v100=4 -3;end if ((2 -1)==v100) then v98=431 -(273 + 157);break;end end end if (v98==1) then if (v59==(1 + 0)) then local v103=0 + 0;local v104;while true do if (v103~=(807 -(356 + 451))) then else v104=0 -0;while true do if (v104==(3 -2)) then local v160=0 -0;while true do if ((0 -0)~=v160) then else for v230=965 -(327 + 637),v64 do local v231=857 -(226 + 631);local v232;local v233;while true do if ((61 -(22 + 38))~=v231) then else if (v232==(1107 -(133 + 973))) then v233=v22()~=0;elseif (v232==(1734 -(1462 + 270))) then v233=v25();elseif (v232~=3) then else v233=v26();end v65[v230]=v233;break;end if (v231==0) then local v287=326 -(74 + 252);local v288;while true do if (v287==(911 -(475 + 436))) then v288=0 + 0;while true do if (v288==(504 -(408 + 95))) then v231=1 + 0;break;end if (v288==(855 -(136 + 719))) then local v342=0;while true do if (v342~=1) then else v288=1 -0;break;end if (v342==(994 -(687 + 307))) then v232=v22();v233=nil;v342=2 -1;end end end end break;end end end end end v63[1964 -(1235 + 726)]=v22();v160=1;end if (v160==(1475 -(1332 + 142))) then v104=81 -(70 + 9);break;end end end if (v104~=(47 -(40 + 7))) then else v64=v24();v65={};v104=1;end if (v104~=(4 -2)) then else v59=1 + 1;break;end end break;end end end break;end end end break;end if ((1241 -(460 + 781))~=v58) then else v59=0;v60=nil;v58=1555 -(371 + 1183);end if (v58~=(967 -(409 + 557))) then else v61=nil;v62=nil;v58=4 -2;end end break;end if (v57==(1573 -(906 + 664))) then v64=nil;v65=nil;v57=5 -1;end if (v57==(3 -2)) then v60=nil;v61=nil;v57=1582 -(1466 + 114);end if (v57~=(1 + 1)) then else v62=nil;v63=nil;v57=4 -1;end end end;v18=5;end end end;vv8(),...);end
